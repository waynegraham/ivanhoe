<?xml version="1.0"?>

<!-- Ivanhoe build file -->
<project name="Ivanhoe" default="help">
 
    <!-- load properties from a file that can override defaults -->
    <property name="build.properties" value="build.properties"/>
    <property file="${build.properties}"/>
    
    <!-- use the ant-contrib jar in the Ivanhoe repository -->
    <taskdef resource="net/sf/antcontrib/antcontrib.properties">
        <classpath>
            <pathelement location="lib/ant-contrib.jar"/>
        </classpath>
    </taskdef>

    <!-- default build values -->
    <property name="server.name" value="Ivanhoe"/>
    <property name="server.dist.dir" location="../ivanweb/server"/>
    <property name="server.hostname" value="jarry.itc.virginia.edu"/>
    <property name="server.hostname.http" value="http://${server.hostname}"/>
    <property name="server.game.port" value="4000"/>
    <property name="server.web.port" value="3000"/>
    <property name="server.mail.enabled" value="false"/>
    <property name="server.mail.hostname" value="l.mail.virginia.edu"/>
    <property name="server.mail.from" value="ivanhoe@nines.org"/>
    <property name="server.newaccounts.allow" value="false"/>
    <property name="server.newaccounts.permissions" value="new_role_permission,write_permission"/>
    <property name="db.host" value="localhost"/>
    <property name="db.name" value="ivanhoe"/>
    <property name="db.user" value="ivanhoe"/>
    <property name="db.pass" value="gam3"/>
    <!-- <property name="jnlp.url.base" value="${server.hostname.http}:${server.web.port}/client"/> -->
    <property name="jnlp.url.base" value="${server.hostname.http}/client"/>
    <property name="jnlp.dir.base" location="../ivanweb/public/client"/>
    <property name="game.discoursefield.dir" value="discourse_field"/>
    <property name="build.dir" location="build.${server.name}"/>

    <!-- properties to be written to other files -->
    <urlencode property="server.name.url" value="${server.name}"/>

    <!-- deployment directories -->
    <property name="dist.jnlp.url" value="${jnlp.url.base}"/>
    <property name="dist.jnlp.dir" location="${jnlp.dir.base}"/>

    <!-- Global Settings -->
    <property name="javac.debug" value="on"/>
    <property name="build.compiler" value="modern"/>
	
	<!-- Library JARs with version numbers in the name should be aliased here -->
	<property name="lib.log4j.jar" value="log4j-1.2.8.jar"/>
	<property name="lib.log4j.jar" value="log4j-1.2.8.jar"/>
	<property name="lib.mysql.jar" value="mysql-connector-java-3.1.7.jar"/>

    <!-- Help target -->
    <target name="help">
        <echo message="Ivanhoe build targets:"/>
        <echo message="    build-jnlp       - Build the jnlp file from build properties"/>
        <echo message="    build-resources  - Build the non-java resources from build properties"/>
        <echo message="    check-uptodate   - Check to see if jars need to be resigned"/>
        <echo message="    clean            - Cleans all targets"/>
        <echo message="    compile          - Compile and jar all source files"/>
        <echo message="    compile-tools    - Compile and jar all secondary tools"/>
        <echo message="    deploy-all       - Compile, test and deploy"/>
        <echo message="    deploy-client    - Deploy the webstart client"/>
        <echo message="    deploy-server    - Deploy the server"/>
        <echo message="    graph            - Create the build dependancy graph"/>
        <echo message="    help             - Print this message"/>
        <echo message="    lint             - Run lint"/>
        <echo message="    package          - Create jar files from classes"/>
        <echo message="    run-server       - Launch lobby and game servers from ant"/>
        <echo message="    signjar          - Signs jar files for jnlp"/>
        <echo message="    unit-tests       - Build and run unit tests"/>
    </target>
    
    <target name="graph">
        <typedef resource="net/ggtools/grand/antlib.xml" classpath="lib/grand-1.8.jar"/>
        <grand output="build.dot" buildfile="build.xml"/>
    </target>

    <!-- Define classpath to include all jars in lib -->
    <path id="compile.classpath">
        <fileset dir="lib">
            <include name="*.jar"/>
        </fileset>
    </path>

    <!-- Define classpath for running jUnit tests -->
    <path id="classpath.junit">
        <pathelement path="${build.dir}/classes"/>

        <fileset dir="${build.dir}/lib">
            <include name="*.jar"/>
        </fileset>

        <fileset dir="lib">
            <include name="*.jar"/>
        </fileset>
    </path>

    <!-- Target to create build dirs prior to compile -->
    <target name="prepare">
        <mkdir dir="${server.dist.dir}"/>
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.dir}/classes"/>
        <mkdir dir="${build.dir}/lib"/>  
        <mkdir dir="${build.dir}/res"/>  
        <mkdir dir="${build.dir}/jnlp"/>  
    </target>
    
    <target name="check-uptodate">
      <uptodate property="signed.jars.uptodate">
        <srcfiles dir="lib">
          <include name="MRJAdapter.jar"/>
          <include name="kunststoff.jar"/>
          <include name="${lib.log4j.jar}"/>
          <include name="Tidy.jar"/>
<!--
          <include name="resources.jar"/>
          <include name="ivanhoe-client.jar"/>
-->
        </srcfiles>
        <mapper type="glob" from="*.jar" to="${build.dir}/signed/*.jar"/>
      </uptodate>
    </target>
  
    <!-- signs jar files for deployment via JNLP.  See following for
          directions on creating key file:
          
          http://java.sun.com/products/javawebstart/1.2/docs/developersguide.html
    
    --> 
    <target name="signjar" depends="signlibjar,signivanjar"/>

    <target name="signivanjar" depends="package">
        <mkdir dir="${build.dir}/signed"/>      
        <copy todir="${build.dir}/signed">
            <fileset dir="${build.dir}/lib" includes="resources.jar,ivanhoe-client.jar"/>
        </copy>

        <signjar alias="myself" 
                storepass="ivanhoe"
                keystore="res/ivanhoe.key">
            <fileset dir="${build.dir}/signed" includes="resources.jar,ivanhoe-client.jar"/>
        </signjar>
    </target>

    <target name="signlibjar" depends="package,check-uptodate" unless="signed.jars.uptodate">
        <mkdir dir="${build.dir}/signed"/>      
        <copy todir="${build.dir}/signed">
            <fileset dir="lib">
                <include name="MRJAdapter.jar"/>
                <include name="kunststoff.jar"/>
                <include name="${lib.log4j.jar}"/>
                <include name="Tidy.jar"/>
            </fileset>
        </copy>

        <signjar alias="myself" 
                storepass="ivanhoe"
                keystore="res/ivanhoe.key">
            <fileset dir="${build.dir}/signed">
                <include name="MRJAdapter.jar"/>
                <include name="kunststoff.jar"/>
                <include name="${lib.log4j.jar}"/>
                <include name="Tidy.jar"/>
            </fileset>
        </signjar>  
    </target>

    <!-- Target to Clean dirs -->
    <target name="clean" description="Removes all generated files">
        <delete dir="${build.dir}"/>
        <delete dir="work"/>
        <delete>
            <fileset dir=".">
                <include name="TEST*"/>
                <include name="*.save"/>
                <include name="*.log*"/>
            </fileset>
        </delete>
        <delete file="build.dot"/>
    </target>

    <!-- build the jnlp file from a template -->
    <target name="build-jnlp" depends="prepare">
        <copy todir="${build.dir}/jnlp">
            <fileset dir="res/jnlp"/>

            <filterchain>
                <replacetokens>
                    <token key="JNLP_URL" value="${dist.jnlp.url}"/>
                </replacetokens>
            </filterchain>
        </copy>
    </target>

    <!-- deploy via jnlp -->
    <target name="deploy-client" depends="signjar">
        <mkdir dir="${dist.jnlp.dir}/lib"/>
        <copy todir="${dist.jnlp.dir}/lib">
            <fileset dir="lib">
                <include name="jh.jar"/>
                <include name="rachel.jar"/>
                <include name="houston-1.0-b1.jar"/>
            </fileset>
            <fileset dir="${build.dir}/signed"/>
        </copy>

        <!-- copy the jnlp files -->
        <copy todir="${dist.jnlp.dir}">
            <fileset dir="${build.dir}/jnlp"/>
        </copy>
    </target>
    
    <!-- Target to compile & jar all secondary tool code -->
    <target name="compile-tools" depends="compile"
            description="Compiles all secondary Ivanhoe tools">
        <jar jarfile="${build.dir}/lib/convert-link-target-table.jar"
                basedir="${build.dir}/classes"
                excludes="**/Test**.class **/ivanhoe.key **/jnlp **/help/** **/*.jnlp **/discourse_field/**">
            <exclude name="**/client/**"/>
            <exclude name="**/ivanhoe/admin/**"/>
            <manifest>
                <attribute name="Main-Class"
                        value="edu.virginia.speclab.ivanhoe.server.mapper.converter.ConvertLinkTargetTable"/>
                <attribute name="Class-Path"
                        value="lib/log4j-1.2.8.jar
                               lib/mysql-connector-java-3.0.8-stable-bin.jar"/>
            </manifest>
        </jar>
        <jar jarfile="${build.dir}/lib/restructure-doc-dirs.jar"
                basedir="${build.dir}/classes"
                excludes="**/Test**.class **/ivanhoe.key **/jnlp **/help/** **/*.jnlp **/discourse_field/**">
            <exclude name="**/client/**"/>
            <exclude name="**/ivanhoe/admin/**"/>
            <manifest>
                <attribute name="Main-Class"
                        value="edu.virginia.speclab.ivanhoe.server.mapper.converter.RestructureDocumentDirectories"/>
                <attribute name="Class-Path"
                        value="lib/${lib.log4j.jar}
                               lib/${lib.mysql.jar}"/>
            </manifest>
        </jar>
        <jar jarfile="${build.dir}/lib/add-permissions.jar"
                basedir="${build.dir}/classes"
                excludes="**/Test**.class **/ivanhoe.key **/jnlp **/help/** **/*.jnlp **/discourse_field/**">
            <exclude name="**/client/**"/>
            <exclude name="**/ivanhoe/admin/**"/>
            <manifest>
                <attribute name="Main-Class"
                        value="edu.virginia.speclab.ivanhoe.server.mapper.converter.AddPermissions"/>
                <attribute name="Class-Path"
                        value="lib/${lib.log4j.jar}
                               lib/${lib.mysql.jar}"/>
            </manifest>
        </jar>
        <jar jarfile="${build.dir}/lib/migrate_games_sql.jar"
                basedir="${build.dir}/classes"
                excludes="**/Test**.class **/ivanhoe.key **/jnlp **/help/** **/*.jnlp **/discourse_field/**">
            <exclude name="**/client/**"/>
            <exclude name="**/ivanhoe/admin/**"/>
            <manifest>
                <attribute name="Main-Class"
                        value="edu.virginia.speclab.ivanhoe.server.mapper.converter.ServerGameSQLMigrator"/>
                <attribute name="Class-Path"
                        value="lib/${lib.log4j.jar}
                               lib/${lib.mysql.jar}"/>
            </manifest>
        </jar>
        <jar jarfile="${build.dir}/lib/sql-verifier.jar"
                basedir="${build.dir}/classes"
                excludes="**/Test**.class **/ivanhoe.key **/jnlp **/help/** **/*.jnlp **/discourse_field/**">
            <exclude name="**/client/**"/>
            <exclude name="**/ivanhoe/admin/**"/>
            <manifest>
                <attribute name="Main-Class"
                        value="edu.virginia.speclab.ivanhoe.server.mapper.converter.SQLDataVerifier"/>
                <attribute name="Class-Path"
                        value="lib/${lib.log4j.jar}
                               lib/${lib.mysql.jar}"/>
            </manifest>
        </jar>
    </target>
    
    <!-- Target to build resources jar -->
    <target name="build-resources" depends="compile">
        <!-- copy over all the relevant files -->
        <copy todir="${build.dir}/res">
            <fileset dir="res">
                <exclude name="*.properties"/>
                <exclude name="jnlp/*"/>
            </fileset>
        </copy>

        <!-- generate the properties files seperately -->
        <copy todir="${build.dir}/res">
            <fileset dir="res">
                <include name="ivanhoe.properties"/>
                <include name="default.client.properties"/>
            </fileset>

            <filterchain>
                <replacetokens>
                    <token key="SERVER_NAME" value="${server.name}"/>
                    <token key="SERVER_HOSTNAME" value="${server.hostname}"/>
                	<token key="SERVER_PORT" value="${server.game.port}"/>
                    <token key="DB_HOST" value="${db.host}"/>
                    <token key="DB_NAME" value="${db.name}"/>
                    <token key="DB_USER" value="${db.user}"/>
                    <token key="DB_PASS" value="${db.pass}"/>
                    <token key="MAIL_ENABLED" value="${server.mail.enabled}"/>
                    <token key="MAIL_HOST" value="${server.mail.hostname}"/>
                    <token key="MAIL_FROM" value="${server.mail.from}"/>
                    <token key="DISCOURSE_FIELD_DIR" value="${game.discoursefield.dir}"/>
                    <token key="ALLOW_NEW_ACCOUNTS" value="${server.newaccounts.allow}"/>
                    <token key="NEW_ACCOUNT_PERMISSIONS" value="${server.newaccounts.permissions}"/>
                </replacetokens>
            </filterchain>
        </copy>

        <!-- Jar the resource bundle (used by jnlp) -->
        <jar destfile="${build.dir}/lib/resources.jar">
            <fileset dir="${build.dir}"
                    includes="res/**"
                    excludes="**/ivanhoe.key **/jnlp **/help/** **/*.jnlp **/ivanhoe.properties **/discourse_field/** **/xsl/**"/>
            <fileset file="${build.dir}/classes/ResourceAnchor.class"/>
        </jar>

    </target>
    
    <!-- Target to compile & jar all main code -->
    <target name="compile" depends="prepare"
            description="Compiles all Ivanhoe source">
        <javac srcdir="src"
                destdir="${build.dir}/classes"
                debug="${javac.debug}"
                deprecation="on">
            <classpath refid="compile.classpath"/>
        </javac>
    </target>

    <target name="package" depends="compile,compile-tools,build-resources,build-jnlp">
        <!-- Jar the client -->
        <jar jarfile="${build.dir}/lib/ivanhoe-client.jar"
                basedir="${build.dir}/classes"
                excludes="**/Test**.class">
            <exclude name="**/server/**"/>
            <exclude name="**/ivanhoe/admin/**"/>
            <manifest>
                <attribute name="Main-Class" 
                    value="edu.virginia.speclab.ivanhoe.client.Ivanhoe"/>
                <attribute name="Class-Path"
                        value="lib/${lib.log4j.jar} 
                                lib/jh.jar 
                                lib/jnlp.jar
                                lib/kunststoff.jar 
                                lib/MRJAdapter.jar 
                                lib/resources.jar 
                                lib/Tidy.jar 
                                lib/houston-1.0-b1.jar 
                                lib/rachel.jar"/> 
            </manifest>
        </jar>
 
        <!-- Jar the game server -->
        <jar jarfile="${build.dir}/lib/ivanhoe-server.jar"
              basedir="${build.dir}/classes"
              excludes="**/Test**.class">
            <exclude name="**/client/**"/>
            <exclude name="**/lobby/**"/>
            <exclude name="**/ivanhoe/admin/**"/>
            <exclude name="ResourceAnchor.class"/>
            <manifest>
                <attribute name="Main-Class" 
                    value="edu.virginia.speclab.ivanhoe.server.game.IvanhoeServer"/>
                <attribute name="Class-Path"
                    value="lib/${lib.log4j.jar} 
                             lib/mail.jar
                             lib/activation.jar
                             lib/${lib.mysql.jar}"/>
            </manifest>
        </jar>

        <!-- Jar the lobby server -->
        <jar jarfile="${build.dir}/lib/lobby-server.jar"
              basedir="${build.dir}/classes"
              excludes="**/Test**.class">
            <exclude name="**/client/**"/>
            <exclude name="**/game/**"/>
            <exclude name="**/ivanhoe/admin/**"/>
            <exclude name="ResourceAnchor.class"/>
            <manifest>
                <attribute name="Main-Class" 
                    value="edu.virginia.speclab.ivanhoe.server.lobby.LobbyServer"/>
                <attribute name="Class-Path"
                    value="lib/${lib.log4j.jar} 
                             lib/mail.jar
                             lib/activation.jar
                             lib/${lib.mysql.jar}"/>
            </manifest>
        </jar>

        <!-- Jar the admin tool -->
        <jar jarfile="${build.dir}/lib/admin.jar"
              basedir="${build.dir}/classes"
              excludes="**/Test**.class">
            <exclude name="**/client/**"/>
            <exclude name="**/server/**"/>
            <exclude name="ResourceAnchor.class"/>
            <manifest>
                <attribute name="Main-Class" 
                    value="edu.virginia.speclab.ivanhoe.admin.Admin"/>
                <attribute name="Class-Path"
                    value="lib/${lib.log4j.jar}"/>
            </manifest>
        </jar>
    </target>
    
    <!-- Run all unit tests -->
    <target name="unit-tests" depends="compile,build-resources"
            description="build and run unit tests">
        <mkdir dir="${build.dir}/test"/>
        <junit printsummary="on"
                 fork="yes"
                 haltonfailure="true"
                 showoutput="true">
            <classpath refid="classpath.junit"/>
                <sysproperty key="IVANHOE_DIR" file="."/>
            <jvmarg value="-Djava.awt.headless=true"/>
            <formatter type="brief" usefile="false"/>
            <formatter type="xml" usefile="true"/> 
            <batchtest todir="${build.dir}/test">
                <fileset dir="src">
                    <include name="**/Test*.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>
    
    <target name="deploy-server" depends="package" 
              description="builds server distribution">

        <!-- Build SERVER distribution -->
        <copy todir="${server.dist.dir}">
            <fileset dir="${build.dir}/lib">
                <exclude name="ivanhoe-client.jar"/>
            </fileset>
        </copy>
        <copy todir="${server.dist.dir}/lib">
            <fileset dir="lib">
                <include name="${lib.log4j.jar}"/>
                <include name="mail.jar"/>
                <include name="activation.jar"/>
                <include name="${lib.mysql.jar}"/>
            </fileset>
        </copy>

        <mkdir dir="${server.dist.dir}/${game.discoursefield.dir}"/>
        <copy todir="${server.dist.dir}">
            <fileset dir="${build.dir}/res">
                <include name="ivanhoe.properties"/>
            </fileset>
          <fileset dir="">
              <include name="scripts/test_setup.sql"/>
          </fileset>
        </copy>
    </target> 

    <target name="run-server" depends="deploy-server"
              description="Run Ivanhoe Lobby and Game Server">
        <parallel>
            <java jar="${server.dist.dir}/ivanhoe-server.jar"
                fork="true"  
                dir="${server.dist.dir}">
                 <sysproperty key="IVANHOE_DIR" file="${server.dist.dir}"/>
            </java>
            <java jar="${server.dist.dir}/lobby-server.jar"
                fork="true"  
                dir="${server.dist.dir}">
                 <sysproperty key="IVANHOE_DIR" file="${server.dist.dir}"/>
            </java>
        </parallel>
    </target>

    <target name="deploy-all" depends="deploy-client,deploy-server" 
            description="Build, test, and deploy both client and server.  Should be used for whole server rollouts."/>
    
    <target name="lint">
         <taskdef name="lint4j" classname="com.jutils.lint4j.ant.Lint4jAntTask">
            <classpath><pathelement location="lib/lint4j.jar"/></classpath>
         </taskdef>
         <lint4j sourcepath="src" 
                       classpath="lib/junit.jar:lib/kunststoff.jar:lib/MRJAdapter.jar" 
                       level="3" 
                       packages="edu.virginia.*" />
    </target>
</project>
