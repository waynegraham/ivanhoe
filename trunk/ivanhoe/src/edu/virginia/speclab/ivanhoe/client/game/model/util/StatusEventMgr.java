/*
 * Created on Jan 13, 2004
 *
 */
package edu.virginia.speclab.ivanhoe.client.game.model.util;

import java.util.Enumeration;
import java.util.Vector;


/**
 * @author lfoster
 *
 * This class encapsulates status msg listener management
 * and event firing
 */
public class StatusEventMgr
{
   // global status listener list
   private static Vector statusListeners = new Vector();
   
    /**
    * Add a listener for status events generated by the an object
    * @param listener
    */
   public static void addListener(IStatusListener listener)
   {
      if (statusListeners.contains(listener) == false)
      {
         statusListeners.add(listener);
      }
   }
   
   /**
    * Send notification that an error message is availabel
    * to all registered listsners
    * @param msg The error message
    */
   public static void fireErrorMsg(String msg)
   {
     Enumeration enumerator = statusListeners.elements();
     while (enumerator.hasMoreElements())
     {
        ((IStatusListener)enumerator.nextElement()).errorMsgNotification(msg);
     }
   }
   
   /**
    * Send notification that a warning message is available
    * to all registered listsners
    * @param msg The error message
    */
   public static void fireWarningMsg(String msg)
   {
     Enumeration enumerator = statusListeners.elements();
     while (enumerator.hasMoreElements())
     {
        ((IStatusListener)enumerator.nextElement()).warningMsgNotification(msg);
     }
   }
   
   /**
    * Removes a status listener
    * @param listener
    */
   public static void removeListener(IStatusListener listener)
   {
      statusListeners.remove(listener);
   }
   
    /**
    * Removes all status listeners
    * @param listener
    */
   public static void removeAllListeners()
   {
      statusListeners.clear();
   }
}
